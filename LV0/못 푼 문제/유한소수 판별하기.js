// 소수점 아래 숫자가 계속되지 않고 유한개인 소수를 유한소수라고 합니다.
// 분수를 소수로 고칠 때 유한소수로 나타낼 수 있는 분수인지 판별하려고 합니다.
// 유한소수가 되기 위한 분수의 조건은 다음과 같습니다.

// 기약분수로 나타내었을 때, 분모의 소인수가 2와 5만 존재해야 합니다.
// 두 정수 a와 b가 매개변수로 주어질 때, a / b가 유한소수이면 1을,
// 무한소수라면 2를 return하도록 solution 함수를 완성해주세요.

// a, b는 정수
// 0 < a ≤ 1,000
// 0 < b ≤ 1,000

let a = 7;
let b = 20;

/**풀이 */
function solution(a, b) {
  // a를 b로 나눈 수를 소수점 아래 10의 자리만큼 표기한 후 Number 타입으로 변환한다.
  // 이때 변환한 값과 a를 b로 나눈 수가 같다면 유한소수이므로 1,
  // 아니라면 무한소수이므로 2를 리턴한다.
  return Number((a / b).toFixed(10)) == a / b ? 1 : 2;
}

function solution2(a, b) {
  while (b % 2 === 0) {
    b /= 2;
  }
  while (b % 5 === 0) {
    b /= 5;
  }
  return a % b ? 2 : 1;
}

// b가 1이라면 유한소수이므로(분모의 소인수가 2와 5만 존재) 1을 리턴,
// b가 그 외의 값이라면 무한소수이므로(분모에 2와 5를 제외한 소수가 포함) 2를 리턴한다.
